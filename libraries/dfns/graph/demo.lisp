;;; -*- Mode:Lisp; Syntax:ANSI-Common-Lisp; Coding:utf-8; Package:AprilLib.Dfns.Graph -*-
;;;; demo.lisp

(in-package :april-lib.dfns.graph)

(april-load (with (:space graph-lib-space))
            (asdf:system-relative-pathname (intern (package-name *package*) "KEYWORD") "graph.apl"))

(specify-demo
 "April graph demo"
 (with :space graph-lib-space
       :description "Implements graph processing functions from Dyalog's dfns.")
 (:tests (provision "costs1 ← ↑(72 99 88)(23 30 35)(51 59 84)")
         (is "assign costs1" #2A((1 0 0) (0 0 1) (0 1 0)))
         (is "assign -costs1" #2A((0 1 0) (1 0 0) (0 0 1)))
         (is "+/+/×∘assign⍨costs1" 166)
         (provision "costs2 ← ↑(7 38 23 27 11 3 34 34 47 20)(26 42 2 3 27 34 1 20 4 21)(35 30 47 43 27 5 33 21 36 46)(39 14 3 37 17 32 38 50 19 13)(50 37 38 33 4 32 45 14 22 39)(24 12 14 18 9 25 45 46 4 46)")
         (is "assign costs2" #2A((1 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 1 0 0 0) (0 0 0 0 0 1 0 0 0 0)
                                 (0 0 1 0 0 0 0 0 0 0) (0 0 0 0 1 0 0 0 0 0) (0 0 0 0 0 0 0 0 1 0)))
         (is "{⍵×assign ⍵} costs2" #2A((7 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 1 0 0 0) (0 0 0 0 0 5 0 0 0 0)
                                       (0 0 3 0 0 0 0 0 0 0) (0 0 0 0 4 0 0 0 0 0) (0 0 0 0 0 0 0 0 4 0)))
         (is "{+/+/⍵×assign ⍵} costs2" 24)
         (is "assign -costs2" #2A((0 0 0 0 0 0 0 0 1 0) (0 1 0 0 0 0 0 0 0 0) (0 0 1 0 0 0 0 0 0 0)
                                  (0 0 0 0 0 0 0 1 0 0) (1 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 1)))
         (is "{-⍵×assign ⍵} -costs2" #2A((0 0 0 0 0 0 0 0 47 0) (0 42 0 0 0 0 0 0 0 0) (0 0 47 0 0 0 0 0 0 0)
                                         (0 0 0 0 0 0 0 50 0 0) (50 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 46)))
         (is "{+/+/-⍵×assign ⍵} -costs2" 282)
         (provision "costs3 ← ↑(14 1 21 2 36 47)(12 10 16 45 33 8)(35 20 20 25 8 30)(43 30 48 28 8 50)(21 8 29 13 25 24)(49 7 10 16 32 7)(33 32 41 13 24 20)(11 2 46 22 8 48)(21 7 45 5 9 4)(19 13 7 40 23 18)")
         (is "assign costs3" #2A((0 1 0 0 0 0) (1 0 0 0 0 0) (0 0 0 0 1 0) (0 0 0 0 0 0) (0 0 0 0 0 0)
                                 (0 0 0 0 0 1) (0 0 0 1 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 1 0 0 0)))
         (provision "g ← (2 3) (3) (2 4) (1 5) (3)")
         (is "g gperm 2 1 3 4 5" #(3 #(1 3) #(1 4) #(2 5) 3))
         (is "g gperm ⌽⍳⍴g" #(3 #(5 1) #(4 2) 3 #(4 3)))
         (is "g insnode 10" #(#(2 3) 3 #(2 4) #(1 5) 3 #() #() #() #() #()))
         (is "g remnode 3" #(#(2) #() #(1 4) #()))
         (is "g remnode {↑⍺⍺⍨/(⌽⍵),⊂⍺} 1" #(#(2) #(1 3) #(4) #(2)))
         (is "g remnode {↑⍺⍺⍨/(⌽⍵),⊂⍺} 1 1" #(#(2) #(3) #(1)))
         (is "g remnode {↑⍺⍺⍨/(⌽⍵),⊂⍺} 5 4" #(#(2 3) #(3) #(2)))
         (is "g inslink 5 1" #(#(2 3) 3 #(2 4) #(1 5) #(3 1)))
         (is "g remlink 2 3" #(#(2 3) #() #(2 4) #(1 5) 3))
         (is "g search 3" #(3 2 4 1 5))
         (is "g path 2 1" #(2 3 4 1))
         (is "g path (1 2)(4 5)" #(2 3 4))
         (is "g∘path¨⍳5 5"
             #2A((#(1) #(1 2) #(1 3) #(1 3 4) #(1 3 4 5)) (#(2 3 4 1) #(2) #(2 3) #(2 3 4) #(2 3 4 5))
                 (#(3 4 1) #(3 2) #(3) #(3 4) #(3 4 5)) (#(4 1) #(4 1 2) #(4 5 3) #(4) #(4 5))
                 (#(5 3 4 1) #(5 3 2) #(5 3) #(5 3 4) #(5))))
         (is "g span 1" #(-1 1 1 3 4))
         (is "g span 3" #(4 3 -1 3 4))
         (is "g∘span¨⍳⍴g" #(#(-1 1 1 3 4) #(4 -1 2 3 4) #(4 3 -1 3 4) #(4 1 5 -1 4) #(4 3 5 3 -1)))
         (is "g dfspan 1" #(-1 1 2 3 4))
         (is "g dfspan 3" #(4 3 -1 3 4))
         (provision "scg1 ← ,¨1(2 4 5)(3 6)(2 7)(0 5)6 5(3 6)")
         (provision "scg2 ← ,¨4 0(1 3)2 1(1 4 6)(2 5)(3 6 7)")
         (provision "scg3 ← (3)(4)(3 4)(0 2 4)(1 2 3)")
         (is "↓show scg1" #("1 → 1    " "2 → 2 4 5" "3 → 3 6  " "4 → 2 7  "
                            "5 → 0 5  " "6 → 6    " "7 → 5    " "8 → 3 6  "))
         (is "{⎕io←0 ⋄ scc ⍵} scg1" #(0 0 1 1 0 2 2 1))
         (is "↓show scg2" #("1 → 4    " "2 → 0    " "3 → 1 3  " "4 → 2    "
                            "5 → 1    " "6 → 1 4 6" "7 → 2 5  " "8 → 3 6 7"))
         (is "{⎕io←0 ⋄ scc ⍵} scg2" #(0 0 1 1 0 2 2 3))
         (is "{⎕io←0 ⋄ scc ⍵} scg3" #(0 0 0 0 0))
         (is "{⎕io←0 ⋄ ↑∪scc¨{⍵∘gperm¨↓pmat ≢⍵} ⍵} scg3" #2A((0 0 0 0 0)))
         (is "scc scg1+1" #(1 1 2 2 1 3 3 2))
         (is "scc scg2+1" #(1 1 2 2 1 3 3 4))
         (is "scc 1⌽⍳10" #(1 1 1 1 1 1 1 1 1 1))
         (is "scc ⍳10" #(1 2 3 4 5 6 7 8 9 10))
         (is "scc 2⌽⍳10" #(1 2 1 2 1 2 1 2 1 2))
         (is "cond scg1+1" #(#(#(2 3) #(3) #()) #(#(1 2 5) #(3 4 8) #(6 7))))
         (is "(scc≡⍳∘≢) scg1+1" 0)
         (is "(scc≡⍳∘≢) (⍳10),⊂⍬" 1)
         (is "stdists¨g∘span¨⍳⍴g" #(#(0 1 1 2 3) #(3 0 1 2 3) #(2 1 0 1 2) #(1 2 2 0 1) #(3 2 1 2 0)))
         (is "(g span 3)∘stpath¨⍳5" #(#(3 4 1) #(3 2) #(3) #(3 4) #(3 4 5)))
         (is "(g∘span¨⍳⍴g)∘.stpath⍳⍴g"
             #2A((#(1) #(1 2) #(1 3) #(1 3 4) #(1 3 4 5)) (#(2 3 4 1) #(2) #(2 3) #(2 3 4) #(2 3 4 5))
                 (#(3 4 1) #(3 2) #(3) #(3 4) #(3 4 5)) (#(4 1) #(4 1 2) #(4 5 3) #(4) #(4 5))
                 (#(5 3 4 1) #(5 3 2) #(5 3) #(5 3 4) #(5))))
         (is "stpaths¨g∘span¨⍳⍴g"
             #(#(#*1 #(1 2) #(1 3) #(1 3 4) #(1 3 4 5)) #(#(2 3 4 1) #(2) #(2 3) #(2 3 4) #(2 3 4 5))
               #(#(3 4 1) #(3 2) #(3) #(3 4) #(3 4 5)) #(#(4 1) #(4 1 2) #(4 5 3) #(4) #(4 5))
               #(#(5 3 4 1) #(5 3 2) #(5 3) #(5 3 4) #(5))))
         (provision "M←6 7⍴1 0 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1")
         (is "X M" #(0 1 0 1 0 1))
         (is "(X M)⌿M" #2A((1 0 0 1 0 0 0) (0 0 1 0 1 1 0) (0 1 0 0 0 0 1)))
         (is "X 3 4↑=/¨⍳3 3" 0)
         (is "X 4 3↑=/¨⍳3 3" #(1 1 1 0))
         (is "X =/¨⍳3 3" #(1 1 1))
         (is "sudokuX 4 4⍴ 0 0 0 0,0 0 2 1,3 0 0 4,0 0 0 0" #2A((2 1 4 3) (4 3 2 1) (3 2 1 4) (1 4 3 2)))
         (is "queensX¨⍳7" #(#2A((1)) #2A((0 0) (0 0)) #2A((0 0 0) (0 0 0) (0 0 0))
                            #2A((0 1 0 0) (0 0 0 1) (1 0 0 0) (0 0 1 0))
                            #2A((0 0 0 0 1) (0 1 0 0 0) (0 0 0 1 0) (1 0 0 0 0) (0 0 1 0 0))
                            #2A((0 0 0 0 1 0) (0 0 1 0 0 0) (1 0 0 0 0 0)
                                (0 0 0 0 0 1) (0 0 0 1 0 0) (0 1 0 0 0 0))
                            #2A((0 0 0 0 0 0 1) (0 0 0 0 1 0 0) (0 0 1 0 0 0 0) (1 0 0 0 0 0 0)
                                (0 0 0 0 0 1 0) (0 0 0 1 0 0 0) (0 1 0 0 0 0 0))))
         (provision "w←(1 3) 1 (4 1) (1 1) 1")
         (is "(2 5⍴g,w) wcost 1 3 4 5 3 2 3 2" #(3 1 1 1 4 1 4))
         (provision "md1←,¨↑((2 3) 4 4 ⍬) ((2 3) 1 2 ⍬)")
         (provision "md2←,¨↑((2 3 4) 5 5 5 ⍬) ((2 2 2) 2 1 2 ⍬)")
         (provision "aa←↑((2 3 4)(1 3)(1 2 4 5)(1 3 5)(3 4))((1 3 1)(1 2)(3 2 1 1)(1 1 1)(1 1))")
         (is "md1 wpath 1 4" #(1 2 4))
         (is "md2 wpath 1 5" #(1 3 5))
         (is "(↑g w) wspan 1" #(-1 1 2 3 4))
         (is "aa wspan 2" #(2 -1 2 1 3))
         (is "aa wmst 2" #(2 -1 4 1 4))))
